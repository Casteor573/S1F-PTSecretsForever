// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Secret Ring Object
// Script Author: Christan Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 18 : TYPE_STARPOST

private alias object.value11 : secret.visited

// Function declarations


// Static Values
public value StarPost_value42 = 0;
public value StarPost_value52 = 0;
public value StarPost_value53 = 0;

// Tables

public table StarPost_Star
	0x800000, 0xE00000, 0xE0E0E0
	0x000080, 0x0000E0, 0xE0E0E0
	0x008000, 0x00E000, 0xE0E0E0
	0x404000, 0x808000, 0xE0E0E0
	0x400040, 0x800080, 0xE0E0E0
	0x004040, 0x008080, 0xE0E0E0
end table



event ObjectMain
	switch object.state
	case 0
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			if object[currentPlayer].value16 == 0
				BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, 0, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				if checkResult == 1
	
						lampPostID = object.entityPos
						foreach (TypeName[Secret Ring], arrayPos0, ALL_ENTITIES)
							if object[arrayPos0].propertyValue < object.propertyValue
								object[arrayPos0].state = 1
								object[arrayPos0].animation = 2
								object[arrayPos0].value0 = 0
							end if
						next
						
							
									object.state = 2
									object.value4 = 4
									object.value3 = 0
									object.value6 = 0
									object.value5 = 0
									object.value7 = 0
					
					recMilliSeconds = stage.milliSeconds
					recSeconds = stage.seconds
					recMinutes = stage.minutes
					recWaterState = stage.waterState
					recWaterLevel = stage.waterLevel
					recStageList = stage.activeList
					recStage = stage.listPos					
					object.value0 = 384
					if object.priority != PRIORITY_XBOUNDS_DESTROY
						object.priority = PRIORITY_ACTIVE
					end if
					object.animation = 1
					
				end if
			end if
		next
		break
	case 1
		object.animationTimer++
		object.animationTimer &= 7
		object.frame = object.animationTimer
		object.frame >>= 2
		break
	case 2
		object.value5 += 18
		object.value5 &= 511
		object.value6 += 4
		object.value6 &= 511
		if object.value3 < 128
			object.value7++
		else
			if object.value3 > 472
				object.value7--
			end if
		end if
		object.value3++
		if object.value3 == 600
			object.state = 1
			object.value3 = 0
			object.value4 = 0
			if object.priority != PRIORITY_XBOUNDS_DESTROY
				object.priority = PRIORITY_ACTIVE_BOUNDS
			end if
		end if
		object.animationTimer++
		object.animationTimer &= 7
		object.frame = object.animationTimer
		object.frame >>= 2
		temp0 = object.value7
		temp0 >>= 2
		FlipSign(temp0)
		temp1 = object.value7
		temp1 >>= 2


		if object.value3 < 60
	
			BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, 0, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
		
			if checkResult == 1
				PlaySfx(SfxName[Warp], 0)
				object.state = 3
				object.priority = PRIORITY_ACTIVE_PAUSED
				stage.state = 3
				stage.pauseEnabled = 0
				object[0].controlMode = -1
				fadeColor = 208
				fadeColor <<= 16
				temp0 = 255
				temp0 <<= 8
				fadeColor += temp0
				fadeColor += 224
				object.value9 = 0
			end if	
	
	end if	
		break
	case 3
		music.volume -= 2
		object.value9 += 8
		SetScreenFade(208, 255, 224, object.value9)
		if object.value9 == 0x400
			CallFunction(StageSetup_SaveStageState)


					recMilliSeconds = stage.milliSeconds
					recSeconds = stage.seconds
					recMinutes = stage.minutes
					recWaterState = stage.waterState
					recWaterLevel = stage.waterLevel
				recStageList = stage.activeList
				recStage = stage.listPos			
				secret.visited = 1		

			stage.activeList = BONUS_STAGE
			stage.listPos = 2
			LoadStage()
		end if
		break
	case 4
		currentPlayer = object.value10
	BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, 0, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
		if checkResult == 1

			if object.animation != 1
				object.value0 = 384
			end if
			if object.priority != PRIORITY_XBOUNDS_DESTROY
				object.priority = PRIORITY_ACTIVE
			end if
			object.animation = 1
			object.state = 1
			PlaySfx(SfxName[Secret Ring], 0)
		end if
		object.animationTimer++
		object.animationTimer &= 7
		object.frame = object.animationTimer
		object.frame >>= 2
		break
	case 5
		object.value5 += 18
		object.value5 &= 511
		object.value6 += 4
		object.value6 &= 511
		if object.value3 < 128
			object.value7++
		else
			if object.value3 > 472
				object.value7--
			end if
		end if
		object.value3++
		if object.value3 == 600
			object.state = 1
			object.value3 = 0
			object.value4 = 0
			if object.priority != PRIORITY_XBOUNDS_DESTROY
				object.priority = PRIORITY_ACTIVE_BOUNDS
			end if
		end if
		object.animationTimer++
		object.animationTimer &= 7
		object.frame = object.animationTimer
		object.frame >>= 2
		temp0 = object.value7
		temp0 >>= 2
		FlipSign(temp0)
		temp1 = object.value7
		temp1 >>= 2
		if object.value3 > 60
			BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, 0, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if checkResult == 1
				//Don't worry about it Karl
			end if
		end if
		break
	case 6	//you been there already
		
	break
	end switch
	
end event


event ObjectDraw
	switch object.state
	case 0
	
			temp0 = object.frame
			temp0 >>= 2
			if temp0 > 3
				object.direction = FLIP_X
			else
				object.direction = FLIP_NONE
			end if
			DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
			object.frame++
			if object.frame > 31
				object.frame = 0
			end if
		
		break
	case 3	
	case 2	
	case 1
		temp0 = object.frame
		temp0 >>= 2
		if temp0 > 11
			object.direction = FLIP_X
		else
			object.direction = FLIP_NONE
		end if
		DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		if temp0 == 11
			object.direction = FLIP_X
			DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		else
			if temp0 == 15
				object.direction = FLIP_X
				DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
			end if
		end if
		object.frame++
		if object.frame > 63

		end if
		break
	end switch
end event




event ObjectStartup
	LoadSpriteSheet("Global/SecretPortal.gif")
	SpriteFrame(-32, -32, 64, 64, 83, 1)
	SpriteFrame(-28, -32, 56, 64, 199, 131)
	SpriteFrame(-24, -32, 48, 64, 148, 1)
	SpriteFrame(-16, -32, 32, 64, 223, 66)
	SpriteFrame(-12, -32, 24, 64, 197, 1)
	SpriteFrame(-16, -32, 32, 64, 223, 66)
	SpriteFrame(-24, -32, 48, 64, 148, 1)
	SpriteFrame(-28, -32, 56, 64, 199, 131)
	SpriteFrame(0, -32, 32, 64, 222, 1)
	SpriteFrame(-16, -32, 48, 64, 101, 66)
	SpriteFrame(-24, -32, 56, 64, 150, 66)
	SpriteFrame(0, -32, 32, 64, 156, 131)
	SpriteFrame(-24, -32, 56, 64, 150, 66)
	SpriteFrame(-16, -32, 48, 64, 101, 66)
	SpriteFrame(0, -32, 32, 64, 222, 1)
	SpriteFrame(-32, -32, 32, 64, 124, 131)
	

		
			if lampPostID > 31
				arrayPos0 = lampPostID
				currentPlayer = 0
				while currentPlayer < playerCount
					object[currentPlayer].xpos = object[arrayPos0].xpos
					object[currentPlayer].ypos = object[arrayPos0].ypos
			
					currentPlayer++
				loop
				if object[arrayPos0].type == TypeName[Secret Ring]
					foreach (TypeName[Secret Ring], arrayPos1, ALL_ENTITIES)
						if object[arrayPos1].propertyValue < object[arrayPos0].propertyValue
							object[arrayPos1].state = 1
							object[arrayPos1].animation = 2
							object[arrayPos1].value0 = 0
						end if
					next
				end if
				screen.cameraX = object[0].ixpos
				screen.cameraY = object[0].iypos
				if object[arrayPos0].type == TypeName[Secret Ring]
					object[arrayPos0].state = 1
					object[arrayPos0].animation = 2
				end if
				stage.milliSeconds = recMilliSeconds
				stage.seconds = recSeconds
				stage.minutes = recMinutes
			end if
	
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
