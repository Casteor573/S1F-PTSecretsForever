// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Decoration
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 69 : TYPE_EGGMAN
private alias 20 : spin.speed

reserve function Clone_Setup
reserve function PlayerObject_CheckHitClone
reserve function BossRotation

//VALUE KEY
//object.value0 = timer
//object.value1 = health
//object.value2 = boss flag 3 (dash or nah)
//object.value3 = boss flag 2 (spindash or spindash + jump)
//object.value4 = boss flag 1 (go to spindash)
//object.value5 = boss flag 4 (dash)
//object.value6 = events? (sfx + clones)


//Ideas
//Walk
//Dash
//Peppino Taunt
//Jump/Roll

function PlayerObject_CheckHitClone	//checks when you can hti t
	CheckEqual(object[currentPlayer].animation, ANI_JUMPING)
	temp0 = checkResult
	CheckEqual(object[currentPlayer].animation, ANI_SPINDASH)
	temp0 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_GLIDING)
	temp0 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_GLIDING_STOP)
	temp0 |= checkResult
	CheckNotEqual(object[currentPlayer].value7, 0)
	temp0 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLYING)
	temp1 = checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLYINGTIRED)
	temp1 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLY_LIFT_UP)
	temp1 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLY_LIFT_DOWN)
	temp1 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLY_LIFT_TIRED)
	temp1 |= checkResult
		CheckEqual(object[currentPlayer].animation, ANI_HAMMER_JUMP)
		temp0 |= checkResult
		CheckEqual(object[currentPlayer].animation, ANI_HAMMER_SPEEN)
		temp0 |= checkResult
	if temp1 == 1
		CheckGreater(object[currentPlayer].ypos, object.ypos)
		temp0 |= checkResult
	end if


	if temp0 == 1
		FlipSign(object[currentPlayer].xvel)
		object[currentPlayer].xvel >>= 1
		object[currentPlayer].speed = object[currentPlayer].xvel
		FlipSign(object[currentPlayer].yvel)
		object[currentPlayer].yvel >>= 1
		if object[currentPlayer].animation == ANI_GLIDING
			object[currentPlayer].value1 = 0
			object[currentPlayer].animation = ANI_GLIDING_DROP
			object[currentPlayer].state = PlayerObject_KnuxGlideDrop
		end if
		checkResult = 1
	else
		if object[currentPlayer].state != PlayerObject_Death
			if object[currentPlayer].value7 == 0
				if object[currentPlayer].value8 == 0
					object[currentPlayer].state = PlayerObject_Hurt
					if object[currentPlayer].xpos > object.xpos
						object[currentPlayer].speed = 0x20000
					else
						object[currentPlayer].speed = -0x20000
					end if
				end if
			end if
		end if
		checkResult = 0
	end if

end function

function Clone_Setup
object.ypos += object.yvel
object.xpos += object.xvel


			temp0 = object.collisionLeft
			temp0 <<= 16
			temp0 += object.xpos
			temp1 = stage.curXBoundary1
			temp1 <<= 16
			if temp0 < temp1
			
			if object.state == 2
			
				object.animation = 53
		
				PlaySfx(SfxName[Thud], 0)
				ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)
				object.value0 = 0
        		object.yvel = -0x45000
				object.xvel = 0x54000
				object.state = 3
			else			
				object.xvel = 0
				object.speed = 0
			end if	
				object.xpos = temp1
				temp0 = object.collisionLeft
				temp0 <<= 16
				object.xpos -= temp0
			end if

			temp0 = object.collisionRight
			temp0 <<= 16
			temp0 += object.xpos
			temp1 = stage.curXBoundary2
			temp1 <<= 16
			if temp0 > temp1

		
				if object.state == 2
		
				object.animation = 53
			
				PlaySfx(SfxName[Thud], 0)
				ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)
				object.value0 = 0
        		object.yvel = -0x45000
				object.xvel = -0x54000
				object.state = 3
			else
  				  object.xvel = 0
  				  object.speed = 0
			end if	  
  				  object.xpos = temp1
   				  temp0 = object.collisionRight
    			  temp0 <<= 16
    			  object.xpos -= temp0
			end if	

switch object.state
case 0
	if object[0].xpos < object.xpos
    	object.direction = FLIP_X	//right
	else
    	object.direction = FLIP_NONE	//left
	end if

object.value10++
if object.value10 == 20	//why did i do this? well, it might seem crazy what im boutta say
object.animation = 55
end if

if object.value10 == 50
object.value1 = 1
object.value10 = 0
object.state = 2
end if



break
case 1	//fall
		object.yvel += 0x2500
		CallFunction(BossRotation)
		object.animation = ANI_DYING
		if object.outOfBounds == 1
		object.type = TypeName[Blank Object]
		end if
	break
case 2
object.animation = 52

	object.xvel = 0
	

	ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)

	object.value0++
	if object.value0 <= 1	
		PlaySfx(SfxName[Release], 0)	
	end if		
	
	CheckGreater(object.frame, 2)
	temp0 = checkResult
	if temp0 == 1
	
	


		if object.value1 > 6
            if object.direction == 0
                object.xvel += 0x70000
            else
                object.xvel += -0x70000
            end if
		else
            if object.direction == 0
                object.xvel += 0x90000
            else
                object.xvel += -0x90000
            end if		
		end if		
		
	end if
break
case 3	//fall
		if object[0].xpos < object.xpos
    		object.direction = FLIP_X	//right
		else
      		object.direction = FLIP_NONE	//left
		end if

		object.yvel += 0x3800
      	
 		if object.yvel > 0	//if his yvel is greater then 0
            ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)	//check for floor and stop him from noclipping into the ground 
            if checkResult == 1	
				object.yvel = 0	
				object.value4 = 0
				object.xvel = 0
				object.state++
				object.animation = ANI_STOPPED
			end if
		end if	
		break
case 4		
	if object[0].xpos < object.xpos
    	object.direction = FLIP_X	//right
	else
    	object.direction = FLIP_NONE	//left
	end if

		//start timer for how long he walks
	object.animation = ANI_WALKING

	//pizzaface code lmao
	

	//Collision... Which we techinally dont need anymore since the arena has no walls

	//ObjectTileCollision(CSIDE_RWALL, 40, 0, 0)	
	//if checkResult == 1		
	//	object.xvel = 0	
	//	object.state++
	//end if	

	//ObjectTileCollision(CSIDE_LWALL, -40, 0, 0)	
	//if checkResult == 1		
	//	object.xvel = 0	
	//	object.state++
	//end if		


	if object.value1 > 6	//if his health is greater then 6, just be normal
	CheckGreater(object.xpos, object[0].xpos)
	temp0 = checkResult

	if temp0 == 1		//right
		if object.xvel > 0
			object.xvel -= 0x2000	//right
		else
			object.xvel -= 0x1500	//left?? i have no clue
		end if
	else	//left
		if object.xvel < 0
			object.xvel += 0x2000
		else
			object.xvel += 0x1500
		end if
	end if	
	else ////////////////////////////////////////////////////////// else if health is lower then 6 go faster
	CheckGreater(object.xpos, object[0].xpos)
	temp0 = checkResult

	if temp0 == 1		//right
		if object.xvel > 0
			object.xvel -= 0x4200	//right
		else
			object.xvel -= 0x2500	//left?? i have no clue
		end if
	else	//left
		if object.xvel < 0
			object.xvel += 0x4200
		else
			object.xvel += 0x2500
		end if
	end if
	end if
break	
end switch

ProcessAnimation()

    foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
        temp0 = object[currentPlayer].collisionRight
        temp0 <<= 16
        temp0 += object[currentPlayer].xpos
        temp1 = stage.curXBoundary2
        temp1 <<= 16
        if temp0 > temp1
            object[currentPlayer].xvel = 0
            object[currentPlayer].speed = 0
            object[currentPlayer].xpos = temp1
            temp0 = object[currentPlayer].collisionRight
            temp0 <<= 16
            object[currentPlayer].xpos -= temp0
        end if

		
		if object.state > 1
			//	hit box
			BoxCollisionTest(C_TOUCH, object.entityPos, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, currentPlayer, object[currentPlayer].value40, object[currentPlayer].value38, object[currentPlayer].value41, object[currentPlayer].value39)
		
			CheckEqual(checkResult, 1)
			temp2 = checkResult
			if temp2 == 1
				CallFunction(PlayerObject_CheckHitClone)	//kill

					if checkResult == 1
											
						if object.value1 == 0	//defeated
                            PlaySfx(SfxName[Hurt], 0)
                          
                            object.yvel = -0x29000
							object.state = 1
							object.animation = ANI_DYING
						else	//he was hit
							object.value1--	
							object.yvel = -0x39000
						
            				if object.direction == 0
                				object.xvel = -0x10000
            				else
                				object.xvel = 0x10000
            				end if	
							object.value0 = 0
							object.animation = ANI_BOUNCING

							PlaySfx(SfxName[Boss Hit], 0)
						end if
					end if				
			end if
		end if

		object[arrayPos0].drawOrder = 4

 	next

end function



event ObjectMain
CallFunction(Clone_Setup)
end event

event ObjectDraw
DrawObjectAnimation()
end event


event ObjectStartup
	LoadSpriteSheet("Secrets/Objects.gif")

	LoadAnimation("FakerSonic.ani")

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
