// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Decoration
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 66 : TYPE_EGGMAN
private alias 20 : spin.speed

reserve function Boss_Startup
reserve function Boss_Walk
reserve function PlayerObject_Bonked
reserve function PlayerObject_CheckHitBoss
reserve function BossRotation
reserve function Boss_Clones

//VALUE KEY
//object.value0 = timer
//object.value1 = health
//object.value2 = boss flag 3 (dash or nah)
//object.value3 = boss flag 2 (spindash or spindash + jump)
//object.value4 = boss flag 1 (go to spindash)
//object.value5 = boss flag 4 (dash)
//object.value6 = events? (sfx + clones)


//Ideas
//Walk
//Dash
//Peppino Taunt
//Jump/Roll

function PlayerObject_CheckHitBoss	//checks when you can hti t

//all animation checks below can kill you

CheckEqual(object.animation, ANI_JUMPING)
temp2 = checkResult
CheckEqual(object.animation, ANI_SPINDASH)
temp2 |= checkResult
CheckEqual(object.animation, 52)	//dashing btw
temp2 |= checkResult

if temp2 == 0	//his ball is stronger then yours
	CheckEqual(object[currentPlayer].animation, ANI_JUMPING)
	temp0 = checkResult
	CheckEqual(object[currentPlayer].animation, ANI_SPINDASH)
	temp0 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_GLIDING)
	temp0 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_GLIDING_STOP)
	temp0 |= checkResult
	CheckNotEqual(object[currentPlayer].value7, 0)
	temp0 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLYING)
	temp1 = checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLYINGTIRED)
	temp1 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLY_LIFT_UP)
	temp1 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLY_LIFT_DOWN)
	temp1 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_FLY_LIFT_TIRED)
	temp1 |= checkResult
		CheckEqual(object[currentPlayer].animation, ANI_HAMMER_JUMP)
		temp0 |= checkResult
		CheckEqual(object[currentPlayer].animation, ANI_HAMMER_SPEEN)
		temp0 |= checkResult
	if temp1 == 1
		CheckGreater(object[currentPlayer].ypos, object.ypos)
		temp0 |= checkResult
	end if

end if	
	if temp0 == 1
		FlipSign(object[currentPlayer].xvel)
		object[currentPlayer].xvel >>= 1
		object[currentPlayer].speed = object[currentPlayer].xvel
		FlipSign(object[currentPlayer].yvel)
		object[currentPlayer].yvel >>= 1
		if object[currentPlayer].animation == ANI_GLIDING
			object[currentPlayer].value1 = 0
			object[currentPlayer].animation = ANI_GLIDING_DROP
			object[currentPlayer].state = PlayerObject_KnuxGlideDrop
		end if
		checkResult = 1
	else
		if object[currentPlayer].state != PlayerObject_Death
			if object[currentPlayer].value7 == 0
				if object[currentPlayer].value8 == 0
					object[currentPlayer].state = PlayerObject_Hurt
					if object[currentPlayer].xpos > object.xpos
						object[currentPlayer].speed = 0x20000
					else
						object[currentPlayer].speed = -0x20000
					end if
				end if
			end if
		end if
		checkResult = 0
	end if

end function

function PlayerObject_Bonked	//probably wont use just wanted to see how it would play
	if object[currentPlayer].animation != ANI_HURT	//cant be hit if your already hurt
		object[currentPlayer].state = PlayerObject_Knockback	//dont actually kill them so use knockback	
		object[currentPlayer].yvel = -0x40000	
		if object[currentPlayer].xpos > object.xpos	//fling
			object[currentPlayer].speed = 0x20000	
			else
			object[currentPlayer].speed = -0x20000
		end if
        object[currentPlayer].gravity = GRAVITY_AIR
        object[currentPlayer].animation = ANI_HURT
		object[currentPlayer].value8 = 120	//you are invulerable!
		PlaySfx(SfxName[Hurt], 0)
       	PlaySfx(SfxName[Thud], 0)		
	end if	
end function


function Boss_Startup
//so he can move lol
object.ypos += object.yvel
object.xpos += object.xvel

			temp0 = object.collisionLeft
			temp0 <<= 16
			temp0 += object.xpos
			temp1 = stage.curXBoundary1
			temp1 <<= 16
			if temp0 < temp1
			CheckEqual(object.state, 9)
			temp3 = checkResult
			CheckEqual(object.state, 10)
			temp3 |= checkResult
			CheckEqual(object.state, 11)
			temp3 |= checkResult		
			CheckEqual(object.state, 12)
			temp3 |= checkResult				
			if temp3 == 1
			if object.state == 12
				object.animation = 53
			end if
				PlaySfx(SfxName[Thud], 0)
				ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)
				object.value0 = 0
			if object.value1 > 6	
        		object.yvel = -0x45000
				object.xvel = 0x54000
			else
        		object.yvel = -0x45000
				object.xvel = 0x84000
			end if	
				object.state = 10
			else			
				object.xvel = 0
				object.speed = 0
			end if	
				object.xpos = temp1
				temp0 = object.collisionLeft
				temp0 <<= 16
				object.xpos -= temp0
			end if

			temp0 = object.collisionRight
			temp0 <<= 16
			temp0 += object.xpos
			temp1 = stage.curXBoundary2
			temp1 <<= 16
			if temp0 > temp1

			CheckEqual(object.state, 9)
			temp3 = checkResult
			CheckEqual(object.state, 10)
			temp3 |= checkResult
			CheckEqual(object.state, 11)
			temp3 |= checkResult
			CheckEqual(object.state, 12)
			temp3 |= checkResult			
			if temp3 == 1
			if object.state == 12
				object.animation = 53
			end if			
				PlaySfx(SfxName[Thud], 0)
				ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)
				object.value0 = 0
			if object.value1 > 6	
        		object.yvel = -0x45000
				object.xvel = -0x54000
			else
        		object.yvel = -0x45000
				object.xvel = -0x84000
			end if	
				object.state = 10
			else
  				  object.xvel = 0
  				  object.speed = 0
			end if	  
  				  object.xpos = temp1
   				  temp0 = object.collisionRight
    			  temp0 <<= 16
    			  object.xpos -= temp0
			end if		


	switch object.state
	case 0 //start
		//set the boundaries
		temp0 = object.ixpos
		temp0 += screen.xcenter
		stage.newXBoundary1 = temp0
		temp0 = object.ixpos
		temp0 += screen.xcenter
		stage.newXBoundary2 = temp0
		temp0 = object.iypos
		temp0 += 64
			if object[0].xpos > object.xpos	//if player position is greater then fakers position, startup the music and boss
				object.value1 = 12	//health
				ResetObjectEntity(26, TypeName[Music Event], 0, 0, 0)
				object[26].priority = PRIORITY_ACTIVE
				object.state++
			end if
	break
	case 1	//opening jumpjump
		//still uses "fake jump"
        object.value0++
        if object.value0 == 200
            object.yvel = -0x85000
            object.value0 = 0
			object.value3 = 0
			object.state++
			object.animation = ANI_BOUNCING
		end if	
	break
	case 2	//fall
	if object.value1 != 0	
		object.yvel += 0x2500

 		if object.yvel > 0	//if his yvel is greater then 0
            ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)	//check for floor and stop him from noclipping into the ground 
            if checkResult == 1	
				object.yvel = 0	
				object.xvel = 0
				object.state++
			end if
		end if	
	else	//defeated
	//dont spawn so much lol
		
	object.value0++
	if object.value0 > 5	
		Rand(temp0, 96)
		temp0 -= 48
		temp0 <<= 16
		temp0 += object.xpos
		Rand(temp1, 48)
		temp1 -= 24
		temp1 <<= 16
		temp1 += object.ypos
		CreateTempObject(TypeName[Smoke Puff], object.entityPos, temp0, temp1)
		object.value0 = 0
	end if
	object.value6++
	if object.value6 == 1
		PlaySfx(SfxName[Fake Scream], 0)
	end if	
		PlaySfx(SfxName[Explosion], 0)	

		

		screen.shakeX = 5
		screen.shakeY = 5		

		object.yvel += 0x2500

		object.animation = ANI_DYING

		CallFunction(BossRotation)

		if object.outOfBounds == 1
	
		PlaySfx(SfxName[Block Break], 0)

		ResetObjectEntity(26, TypeName[Music Event], 1, 0, 0)
		object[26].priority = PRIORITY_ACTIVE

		//be free	
		temp0 = tileLayer[0].xsize
		temp0 <<= 7
		stage.newXBoundary2 = temp0
		end if
		//object.state = 10
		
	end if	
	break
	
	case 3	//stand and do nothing		

		if object[0].xpos < object.xpos	//directions
      		object.direction = FLIP_X	//right
		else
      		object.direction = FLIP_NONE	//left
		end if

		object.animation = ANI_STOPPED
	

if object.value1 > 11	//stand around and do nothing for a bit
		object.value0++
        if object.value0 == 100
			if object.value4 == 0	//if its not 1, go to the spindash stuff
				object.value4 = 1
				object.value0 = 0
           		object.state++
          	else
				object.value0 = 0
				object.state = 7
		   	end if
		end if	
else	//////////else if its lower, go faster, no idle waiting
		object.value0 = 0
		if object.value4 == 0	//if its not 1, go to the spindash stuff
			object.value4 = 1
			object.value0 = 0
          	object.state++
       	else
			object.value0 = 0
			object.state = 7
	   	end if
end if
	break
	case 4	//walking



	if object[0].xpos < object.xpos
    	object.direction = FLIP_X	//right
	else
    	object.direction = FLIP_NONE	//left
	end if

		//start timer for how long he walks
	object.animation = ANI_WALKING

	//pizzaface code lmao
	

	if object.value1 > 6	//if his health is greater then 6, just be normal
	CheckGreater(object.xpos, object[0].xpos)
	temp0 = checkResult

	if temp0 == 1		//right
		if object.xvel > 0
			object.xvel -= 0x2000	//right
		else
			object.xvel -= 0x1500	//left?? i have no clue
		end if
	else	//left
		if object.xvel < 0
			object.xvel += 0x2000
		else
			object.xvel += 0x1500
		end if
	end if	
	else ////////////////////////////////////////////////////////// else if health is lower then 6 go faster
	CheckGreater(object.xpos, object[0].xpos)
	temp0 = checkResult

	if temp0 == 1		//right
		if object.xvel > 0
			object.xvel -= 0x4200	//right
		else
			object.xvel -= 0x2500	//left?? i have no clue
		end if
	else	//left
		if object.xvel < 0
			object.xvel += 0x4200
		else
			object.xvel += 0x2500
		end if
	end if
	end if


if object.value5 == 0	//no grab
	if object.value1 > 6
		object.value0++
			if object.value0 == 75		//time to go
				object.value5 = 1
				object.value0 = 0	//always remember to reset this
				object.state++
			end if		
	else
		object.value0++
			if object.value0 == 50		//time to go
				object.value5 = 1
				object.value0 = 0	//always remember to reset this
				object.state++
			end if				
	end if
else	//yes grab
	if object.value1 > 6
		object.value0++
			if object.value0 == 75		//time to go
				object.value0 = 0	//always remember to reset this
				object.state = 12
			end if		
	else
		object.value0++
			if object.value0 == 50		//time to go
				object.value0 = 0	//always remember to reset this
				object.state = 12
			end if				
	end if
end if
	break	
	case 5	//jump rise	//player jump code lmao
		if object[0].xpos < object.xpos
      		object.direction = FLIP_X	//right
		else
     		object.direction = FLIP_NONE	//left
		end if



		object.gravity = GRAVITY_AIR
		temp1 = 0x68000
		temp1 += 0x3800
		Sin256(object.xvel, object.angle)
		object.xvel *= temp1
		Cos256(temp0, object.angle)
		temp0 *= object.speed
		object.xvel += temp0
		object.xvel >>= 8
		Sin256(object.yvel, object.angle)
		object.yvel *= object.speed
		Cos256(temp0, object.angle)
		temp0 *= temp1
		
		object.animation = ANI_JUMPING
		
		object.yvel -= temp0
		object.yvel >>= 8
		object.speed = object.xvel
		object.collisionMode = CMODE_FLOOR
		PlaySfx(SfxName[FakeJump], 0)
	
	
		//go to where ever the player is
		if object.xpos > object[0].xpos	//right	
			object.xvel = -0x20000	//right
		else	//left
			object.xvel = 0x20000
		end if	

		
		object.state++

	break
	case 6	//jumpfall
		if object[0].xpos < object.xpos
    		object.direction = FLIP_X	//right
		else
      		object.direction = FLIP_NONE	//left
		end if

		object.yvel += 0x3800
      	
 		if object.yvel > 0	//if his yvel is greater then 0
            ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)	//check for floor and stop him from noclipping into the ground 
            if checkResult == 1	
				object.yvel = 0	
				object.value0 = 70
				object.state = 3
				object.animation = ANI_STOPPED
				object.xvel = 0
			end if
		end if		
	break	
	case 7	//spindash prep
		if object[0].xpos < object.xpos
      		object.direction = FLIP_X	//right
		else
     		object.direction = FLIP_NONE	//left
		end if


		object.animation = ANI_LOOKINGDOWN
	if object.value1 > 6	
		object.value0++
		if object.value0 == 25	//wait to do something
			object.value0 = 0
			object.state++	//start walking mode
		end if
	else
		object.value0++
		if object.value0 == 1	//wait to do something
			object.value0 = 0
			object.state++	//start walking mode
		end if
	end if	
	break	
	case 8	//spindash prep

	object.animation = ANI_SPINDASH
	
	ObjectTileGrip(CSIDE_FLOOR, 0, 15, 0)

	PlaySfx(SfxName[Charge], 0)


	object.value0++

	if object.value1 > 6

	if object.value0 == 120	//wait to do something
		if object.value3 == 0
			object.value3 = 1
           	object.state++
		else
			object.state = 11
		end if
		object.value0 = 0	
	end if		

	else

	if object.value0 == 60	//wait to do something but shorter
		if object.value3 == 0
			object.value3 = 1
           	object.state++
		else
			object.state = 11
		end if
		object.value0 = 0	
	end if	

	end if

	break
	case 9	//spindash release
	object.animation = ANI_JUMPING
	StopSfx(SfxName[Charge])

            	//no floating pls thats really annoying
          

	//prob not the best method but eh
	object.value0++
	if object.value0 <= 1	
		PlaySfx(SfxName[Release], 0)	
	end if	

		if object.value1 > 6
            if object.direction == 0
                object.xvel = 0x90000
            else
                object.xvel = -0x90000
            end if
		else
            if object.direction == 0
                object.xvel = 0x100000
            else
                object.xvel = -0x100000
            end if
		end if	

	break	
	case 10	//fall but do something different this time
		if object[0].xpos < object.xpos
    		object.direction = FLIP_X	//right
		else
      		object.direction = FLIP_NONE	//left
		end if

		object.yvel += 0x3800
      	
 		if object.yvel > 0	//if his yvel is greater then 0
            ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)	//check for floor and stop him from noclipping into the ground 
            if checkResult == 1	
				object.yvel = 0	
				object.value4 = 0
				object.xvel = 0
				object.state = 3
				object.animation = ANI_STOPPED
			end if
		end if	
	break	
	case 11	//spindash release	but he jumps this time
	object.value3 = 0
	object.value4 = 0
	object.animation = ANI_JUMPING
	StopSfx(SfxName[Charge])

            	
     //he jumps this time     

	//prob not the best method but eh
	object.value0++
	if object.value0 <= 1	
		object.yvel = -0x40000	
		PlaySfx(SfxName[Release], 0)	
		object.value0 = 0
		
		if object.value1 > 6
            if object.direction == 0
                object.xvel = 0x90000
            else
                object.xvel = -0x90000
            end if
		else
            if object.direction == 0
                object.xvel = 0x100000
            else
                object.xvel = -0x100000
            end if
		end if	
		object.state = 10
	end if
	break
	case 12	//grab

	object.xvel = 0
	object.animation = 52
	object.value5 = 0

	ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)

	object.value0++
	if object.value0 <= 1	
		PlaySfx(SfxName[Release], 0)	
	end if		
	
	CheckGreater(object.frame, 2)
	temp0 = checkResult
	if temp0 == 1
	
	


		if object.value1 > 6
            if object.direction == 0
                object.xvel += 0x70000
            else
                object.xvel += -0x70000
            end if
		else
            if object.direction == 0
                object.xvel += 0x90000
            else
                object.xvel += -0x90000
            end if		
		end if		
		
	end if

	break
	case 13	//fall but do something different this time
		if object[0].xpos < object.xpos
    		object.direction = FLIP_X	//right
		else
      		object.direction = FLIP_NONE	//left
		end if

		object.yvel += 0x2000
      	
 		if object.yvel > 0	//if his yvel is greater then 0
            ObjectTileCollision(CSIDE_FLOOR, 0, 30, 0)	//check for floor and stop him from noclipping into the ground 
            if checkResult == 1	
				object.yvel = 0	
			if object.value4 == 1
				object.value4 = 0
			else
				object.value4 = 1
			end if
				object.xvel = 0


				
				object.state++
				object.animation = 54
			
			end if
		end if	
	break		
	case 14	//follow the player underground
	
	object.value0++

	if object.frame == 7

	if object.value1 > 6	//if his health is greater then 6, just be normal
	CheckGreater(object.xpos, object[0].xpos)
	temp0 = checkResult

	if temp0 == 1		//right
		if object.xvel > 0
			object.xvel -= 0x10000	//right
		else
			object.xvel -= 0x1500	//left?? i have no clue
		end if
	else	//left
		if object.xvel < 0
			object.xvel += 0x10000
		else
			object.xvel += 0x1500
		end if
	end if	
	else ////////////////////////////////////////////////////////// else if health is lower then 6 go faster
	CheckGreater(object.xpos, object[0].xpos)
	temp0 = checkResult

	if temp0 == 1		//right
		if object.xvel > 0
			object.xvel -= 0x4200	//right
		else
			object.xvel -= 0x2500	//left?? i have no clue
		end if
	else	//left
		if object.xvel < 0
			object.xvel += 0x4200
		else
			object.xvel += 0x2500
		end if
	end if
	end if

	end if

	if object.value1 < 6
	CallFunction(Boss_Clones)
	end if

if object.value1 > 6
	if object.value0 == 100	//get back up
	object.value0 = 0
	object.xvel = 0
	object.xvel += 0
	object.animation = 55
	object.state++
	end if
else
	if object.value0 == 175	//get back up
	object.value0 = 0
	object.xvel = 0
	object.xvel += 0
	object.animation = 55
	object.state++
	end if
end if


	break
	case 15
	object.value0++
	if object.value0 >= 25
	object.value4 = 1
	object.state = 3
	end if
	break
end switch	

	ProcessAnimation()	//he can animatino

	//stops player from escaping to the right thanks elsie
    foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
        temp0 = object[currentPlayer].collisionRight
        temp0 <<= 16
        temp0 += object[currentPlayer].xpos
        temp1 = stage.curXBoundary2
        temp1 <<= 16
        if temp0 > temp1
            object[currentPlayer].xvel = 0
            object[currentPlayer].speed = 0
            object[currentPlayer].xpos = temp1
            temp0 = object[currentPlayer].collisionRight
            temp0 <<= 16
            object[currentPlayer].xpos -= temp0
        end if
		
		
		if object.state > 2
		if object.state < 13
			//	hit box
			BoxCollisionTest(C_TOUCH, object.entityPos, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, currentPlayer, object[currentPlayer].value40, object[currentPlayer].value38, object[currentPlayer].value41, object[currentPlayer].value39)
		
			CheckEqual(checkResult, 1)
			temp2 = checkResult
			if temp2 == 1
				CallFunction(PlayerObject_CheckHitBoss)	//kill

					if checkResult == 1
											
						if object.value1 == 0	//defeated
                            PlaySfx(SfxName[Hurt], 0)
                            player.score += 1000
                            object.yvel = -0x29000
							object.state = 2
							screen.shakeX = 5
							screen.shakeY = 5							
							object.animation = ANI_DYING
						else	//he was hit
							object.value1--	
							object.yvel = -0x39000
						if object.value1 > 6	
            				if object.direction == 0
                				object.xvel = -0x10000
            				else
                				object.xvel = 0x10000
            				end if	
						else
            				if object.direction == 0
                				object.xvel = -0x30000
            				else
                				object.xvel = 0x30000
            				end if	
						end if						
							object.value0 = 0
							object.state = 13
							object.animation = ANI_BOUNCING

							PlaySfx(SfxName[Boss Hit], 0)
						end if
					end if				
			end if
		end if	
		end if

		object[arrayPos0].drawOrder = 4

 	next
end function


function Boss_Clones	//idk how to get this too work
object.value6++
if object.value6 == 50
	CreateTempObject(TypeName[Clones], 0, object.xpos, object.ypos)
	object[tempObjectPos].animation = 56
	object.value6 = 0
end if


end function

function BossRotation	//rotate code sorry lol
		object.rotation += spin.speed

		temp2 = object.rotation
		if object.rotation >= 0x100
			temp1 = 532
			temp1 -= object.rotation
			temp1 >>= 6
			object.rotation = 8
			object.rotation -= temp1
		else
			object.rotation += 20
			object.rotation >>= 6
		end if
		if object.rotation == 8
			object.rotation = 0
		end if
		object.rotation <<= 6
		DrawObjectAnimation()
		object.rotation = temp2
end function

event ObjectMain
CallFunction(Boss_Startup)
end event

event ObjectDraw
DrawObjectAnimation()
end event


event ObjectStartup
	LoadSpriteSheet("Secrets/Objects.gif")

foreach (TypeName[Boss Test], arrayPos0, ALL_ENTITIES)

	LoadAnimation("FakeSonic.ani")

next


end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
